{"version":3,"sources":["components/partials/Header.js","selectors/expenses.js","components/ExpenseListItem.js","components/ExpenseList.js","actions/filters.js","components/ExpenseListFilters.js","components/ExpenseDashboardPage.js","components/ExpenseForm.js","components/CreateExpensePage.js","actions/expenses.js","components/EditExpensePage.js","components/HelpPage.js","components/NotFoundPage.js","routers/AppRouter.js","reducers/expenses.js","reducers/filters.js","index.js","store/configureStore.js"],"names":["Header","to","activeClassName","exact","getVisibleExpenses","expenses","text","sortBy","startDate","endDate","filter","expense","createdAtMoment","moment","createdAt","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textMatch","description","toLowerCase","includes","sort","a","b","created","amount","ExpenseListItem","id","format","connect","state","selectExpenses","filters","props","map","key","setStartDate","type","setEndDate","ExpenseListFilters","calendarFocused","onDatesChange","dispatch","onFocusChange","setState","value","this","onChange","e","setTextFilter","target","focusedInput","numberOfMonths","isOutsideRange","showClearDates","React","Component","ExpenseDashboardPage","now","console","log","ExpenseForm","onDescriptionChange","onNoteChange","note","onAmountChange","match","onDateChange","focused","onSubmit","preventDefault","error","parseFloat","valueOf","toString","placeholder","autoFocus","date","displayFormat","uuid","addExpense","history","push","find","params","updates","editExpense","onClick","removeExpense","HelpPage","NotFoundPage","AppRouter","path","component","CreateExpensePage","EditExpensePage","expensesReducerDefaultState","expensesReducer","action","filtersReducerDefaultState","startOf","endOf","filtersReducer","store","createStore","combineReducers","window","__REDUX_DEVTOOLS_EXTENSION__","jsx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62414689.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Header = () => (\r\n    <header>\r\n      <h1>Expensify</h1>\r\n      <NavLink to='/' activeClassName='is-active' exact>Home</NavLink> |  \r\n      <NavLink to='/create' activeClassName='is-active'>Create</NavLink> | \r\n    </header>\r\n  )\r\n\r\nexport default Header","import moment from 'moment'\r\n// GET VISIBLE EXPENSES\r\n\r\nconst getVisibleExpenses = (expenses, {text, sortBy, startDate, endDate}) => {\r\n    return expenses.filter((expense) => {\r\n        const createdAtMoment = moment(expense.createdAt)\r\n        const startDateMatch = startDate ? startDate.isSameOrBefore(createdAtMoment, 'day'): true \r\n        const endDateMatch = endDate ? endDate.isSameOrAfter(createdAtMoment, 'day') : true\r\n        const textMatch = expense.description.toLowerCase().includes(text.toLowerCase())\r\n\r\n        return startDateMatch && endDateMatch && textMatch\r\n    }).sort((a, b) => {\r\n        if (sortBy === 'date') {\r\n            return a.createdAt < b.created ? 1 : -1\r\n        }\r\n        if (sortBy === 'amount') {\r\n            return a.amount < b.amount ? 1 : -1\r\n        }\r\n    })\r\n}\r\n\r\nexport default getVisibleExpenses","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ExpenseListItem = ({ id, description, amount, createdAt}) => (\r\n    <div>\r\n        <Link to={`/edit/${id}`}>\r\n            <h3>{description}</h3>\r\n        </Link>\r\n        <p>Amount: {amount}</p>\r\n        <p>Created: {moment(createdAt).format('DD/MM/YYYY')}</p>\r\n    </div>\r\n)\r\n\r\nexport default ExpenseListItem","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport selectExpenses from './../selectors/expenses'\r\n\r\nimport ExpenseListItem from './ExpenseListItem'\r\n\r\nconst ExpenseList = (props) => (\r\n    <div>\r\n        <h1>Expense List</h1>\r\n        {props.expenses.map((expense) => {\r\n            return <ExpenseListItem key={expense.id} {...expense}/>\r\n        })}\r\n    </div>\r\n)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        expenses: selectExpenses(state.expenses, state.filters)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ExpenseList)\r\n","export const setTextFilter = (text = '') => ({\r\n    type: 'SET_TEXT_FILTER',\r\n    text\r\n})\r\n\r\nexport const sortByDate = () => ({\r\n    type: 'SORT_BY_DATE'\r\n})\r\nexport const sortByAmount = () => ({\r\n    type: 'SORT_BY_AMOUNT'\r\n})\r\n\r\nexport const setStartDate = (startDate) => ({\r\n    type: 'SET_START_DATE',\r\n    startDate\r\n})\r\n\r\nexport const setEndDate = (endDate) => ({\r\n    type: 'SET_END_DATE',\r\n    endDate\r\n})","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setTextFilter, sortByAmount, sortByDate, setStartDate, setEndDate } from './../actions/filters'\r\nimport { DateRangePicker } from 'react-dates'\r\n\r\nclass ExpenseListFilters extends React.Component {\r\n    state = {\r\n        calendarFocused: null\r\n    }\r\n    onDatesChange = ({ startDate, endDate }) => {\r\n        this.props.dispatch(setStartDate(startDate))\r\n        this.props.dispatch(setEndDate(endDate))\r\n    }\r\n    onFocusChange = (calendarFocused) => {\r\n        this.setState(() => ({ calendarFocused}))\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                Filter: <input \r\n                    type='text' \r\n                    value={this.props.filters.text} \r\n                    onChange={(e) => {\r\n                    this.props.dispatch(setTextFilter(e.target.value))\r\n                    }}/>\r\n                <br />\r\n                Sort:   \r\n                <select \r\n                    value={this.props.filters.sortBy} \r\n                    onChange={(e) => {\r\n                        if (e.target.value === 'date') {\r\n                            this.props.dispatch(sortByDate())\r\n                        } else if (e.target.value === 'amount') {\r\n                            this.props.dispatch(sortByAmount())\r\n                        }\r\n                    }}>\r\n                    <option value='amount'>Amount</option>\r\n                    <option value='date'>Date</option>\r\n                </select>\r\n                <br />\r\n                Date Range: \r\n                <DateRangePicker \r\n                    startDate={this.props.filters.startDate}\r\n                    endDate={this.props.filters.endDate}\r\n                    onDatesChange={this.onDatesChange}\r\n                    focusedInput={this.state.calendarFocused}\r\n                    onFocusChange={this.onFocusChange}\r\n                    numberOfMonths={1}\r\n                    isOutsideRange={() => false}\r\n                    showClearDates={true}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        filters: state.filters\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ExpenseListFilters)","import React from 'react';\r\n\r\nimport ExpenseList from './ExpenseList'\r\nimport ExpenseListFilters from './ExpenseListFilters'\r\n\r\nconst ExpenseDashboardPage = () => (\r\n<div>\r\n    <h4>Home</h4>\r\n    <ExpenseListFilters />\r\n    <ExpenseList />\r\n</div>\r\n)\r\n\r\nexport default ExpenseDashboardPage","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nimport { SingleDatePicker } from 'react-dates'\r\nimport 'react-dates/lib/css/_datepicker.css'\r\n\r\nconst now = moment()\r\nconsole.log(now.format())\r\n\r\nexport default class ExpenseForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            description: props.expense ? props.expense.description : '',\r\n            amount: props.expense ? (props.expense.amount / 100).toString() : '',\r\n            note: props.expense ? props.expense.note : '',\r\n            createdAt: props.expense ? moment(props.expense.createdAt) : moment(),\r\n            calendarFocused: false,\r\n            error: ''\r\n        }\r\n    }\r\n    onDescriptionChange = (e) => {\r\n        const description = e.target.value\r\n        this.setState(() => ({ description }))\r\n    }\r\n    onNoteChange = (e) => {\r\n        const note = e.target.value\r\n        this.setState(() => ({ note }))\r\n    }\r\n    onAmountChange = (e) => {\r\n        const amount = e.target.value\r\n        if (!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\r\n            this.setState(() => ({ amount }))\r\n        }\r\n        \r\n    }\r\n    onDateChange = (createdAt) => {\r\n        if (createdAt) {\r\n            this.setState(() => ({ createdAt }))\r\n        }\r\n        \r\n    }\r\n    onFocusChange = ({ focused }) => {\r\n        this.setState(() => ({ calendarFocused: focused}))\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!this.state.description || !this.state.amount) {\r\n            this.setState(() => ({ error: 'Please provide description and amount'}))\r\n        } else {\r\n            this.setState(() => ({ error: ''}))\r\n            this.props.onSubmit({\r\n                description: this.state.description,\r\n                amount: parseFloat(this.state.amount, 10) * 100,\r\n                createdAt: this.state.createdAt.valueOf(),\r\n                note: this.state.note\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.error && <p>{this.state.error}</p>}\r\n                <form onSubmit={this.onSubmit}>\r\n                    Description: <input\r\n                    type='text'\r\n                    placeholder='Description'\r\n                    autoFocus\r\n                    value={this.state.description}\r\n                    onChange={this.onDescriptionChange}\r\n                    />\r\n                    <br />\r\n                    Amount: <input\r\n                    type='number'\r\n                    placeholder='Amount'\r\n                    value={this.state.amount}\r\n                    onChange={this.onAmountChange}\r\n                    />\r\n                    <br />\r\n                    Date: <SingleDatePicker \r\n                    date={this.state.createdAt}\r\n                    onDateChange={this.onDateChange}\r\n                    focused={this.state.calendarFocused}\r\n                    onFocusChange={this.onFocusChange}\r\n                    numberOfMonths={1}\r\n                    isOutsideRange={() => false}\r\n                    displayFormat=\"DD/MM/YYYY\"\r\n                    />\r\n                    <br />\r\n                    Notes: <textarea\r\n                    placeholder='Add a note for your expense (optional)'\r\n                    onChange={this.onNoteChange}\r\n                    value={this.state.note}\r\n                    >\r\n                    </textarea>\r\n                    <br />\r\n                    <button>Add Expense</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { addExpense } from './../actions/expenses'\r\n\r\nimport ExpenseForm from './ExpenseForm'\r\n\r\nconst CreateExpensePage = (props) => (\r\n<div>\r\n    <h2>Create a new Expense</h2>\r\n    <ExpenseForm \r\n        onSubmit={(expense) => {\r\n            props.dispatch(addExpense(expense))\r\n            props.history.push('/')\r\n        }}\r\n    />\r\n</div>\r\n)\r\n\r\nexport default connect()(CreateExpensePage)","import { v4 as uuid } from 'uuid'\r\n\r\n// ADD_EXPENSE\r\nexport const addExpense = (\r\n    { description = '', note = '', amount = 0, createdAt = 0 }\r\n    ) => ({\r\n    type: 'ADD_EXPENSE',\r\n    expense: {\r\n        id: uuid(),\r\n        description,\r\n        note,\r\n        amount,\r\n        createdAt\r\n    }\r\n})\r\n// REMOVE_EXPENSE\r\nexport const removeExpense = ({ id } = {}) => ({\r\n    type: 'REMOVE_EXPENSE',\r\n    id\r\n})\r\n\r\nexport const editExpense = (id, updates) => ({\r\n    type: 'EDIT_EXPENSE',\r\n    id, \r\n    updates\r\n})\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport ExpenseForm from './ExpenseForm'\r\nimport { editExpense, removeExpense } from './../actions/expenses'\r\n\r\n\r\nconst EditExpensePage = (props) => {\r\n    console.log(props)\r\n    const id = props.match.params.id\r\n    return (\r\n        <div>\r\n        <h2>Edit Expense</h2>\r\n            <ExpenseForm \r\n                expense={props.expense}\r\n                onSubmit={(expense) => {\r\n                    props.dispatch(editExpense(id, expense))\r\n                    props.history.push('/')\r\n                }}\r\n            />\r\n            <button onClick={() => {\r\n                props.dispatch(removeExpense({id}))\r\n                props.history.push('/')\r\n            }}>Remove</button>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        expense: state.expenses.find((expense) => expense.id === props.match.params.id)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditExpensePage)","import React from 'react';\r\n\r\nconst HelpPage = () => (\r\n<div>\r\n    <h4>Help</h4>\r\n</div>\r\n)\r\n\r\nexport default HelpPage","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NotFoundPage = () => (\r\n<div>\r\n    <h4>404 Not Found</h4>\r\n    <Link to='/'>Go Home</Link>\r\n</div>\r\n)\r\nexport default NotFoundPage","import React from 'react';\r\nimport { BrowserRouter, Route, Switch} from 'react-router-dom'\r\n\r\n// COMPONENTS\r\nimport Header from './../components/partials/Header'\r\nimport ExpenseDashboardPage from './../components/ExpenseDashboardPage'\r\nimport CreateExpensePage from './../components/CreateExpensePage'\r\nimport EditExpensePage from './../components/EditExpensePage'\r\nimport HelpPage from './../components/HelpPage'\r\nimport NotFoundPage from './../components/NotFoundPage'\r\n\r\n\r\nconst AppRouter = () => (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <Switch>\r\n        <Route path='/' component={ExpenseDashboardPage} exact/>\r\n        <Route path='/create' component={CreateExpensePage}/>\r\n        <Route path='/edit/:id' component={EditExpensePage}/>\r\n        <Route path='/help' component={HelpPage}/>\r\n        <Route component={NotFoundPage}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default AppRouter","\r\n// EXPENSES REDUCER\r\nconst expensesReducerDefaultState = []\r\n\r\nconst expensesReducer = (state = expensesReducerDefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_EXPENSE':\r\n            return [\r\n                ...state,\r\n                action.expense\r\n            ]\r\n        case 'REMOVE_EXPENSE':\r\n            return state.filter(({ id }) => id !== action.id)\r\n        case 'EDIT_EXPENSE':\r\n            return state.map((expense) => {\r\n                if (expense.id === action.id) {\r\n                    return {\r\n                        ...expense,\r\n                        ...action.updates\r\n                    }\r\n                } else {\r\n                    return expense\r\n                }\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}   \r\n\r\n// Filters reducer:\r\nconst filtersReducerDefaultState = {\r\n    text: '',\r\n    sortBy: 'date',\r\n    startDate: undefined,\r\n    endDate: undefined\r\n}\r\n\r\nexport default expensesReducer","import moment from 'moment'\r\n// Filters reducer:\r\nconst filtersReducerDefaultState = {\r\n    text: '',\r\n    sortBy: 'amount',\r\n    startDate: moment().startOf('month'),\r\n    endDate: moment().endOf('month')\r\n}\r\nconst filtersReducer = (state = filtersReducerDefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_TEXT_FILTER':\r\n            return {\r\n                ...state,\r\n                text: action.text\r\n            }\r\n        case 'SORT_BY_AMOUNT':\r\n            return {\r\n                ...state,\r\n                sortBy: 'amount'\r\n            }\r\n        case 'SORT_BY_DATE':\r\n            return {\r\n                ...state,\r\n                sortBy: 'date'\r\n            }\r\n        case 'SET_START_DATE':\r\n            return {\r\n                ...state,\r\n                startDate: action.startDate\r\n            }\r\n        case 'SET_END_DATE':\r\n            return {\r\n                ...state,\r\n                endDate: action.endDate\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default filtersReducer","// LIBRARY IMPORTS\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\n\r\n// COMPONENT IMPORTS\r\nimport AppRouter from './routers/AppRouter'\r\n\r\n// ReDUX STORE\r\nimport configureStore from './store/configureStore'\r\nimport { addExpense } from './actions/expenses'\r\nimport { setTextFilter } from './actions/filters'\r\nimport getVisibleExpenses from './selectors/expenses'\r\n\r\n\r\n// CSS / SCSS IMPORTS\r\nimport 'normalize.css/normalize.css'\r\nimport './styles/styles.scss';\r\n\r\n\r\nconst store = configureStore()\r\n\r\nconst jsx = (\r\n  <Provider store={store}>\r\n    <AppRouter />\r\n  </Provider>\r\n  \r\n)\r\n\r\nReactDOM.render(\r\n  jsx,\r\n  document.getElementById('root')\r\n);\r\n\r\n","import { createStore, combineReducers } from 'redux'\r\n\r\nimport expensesReducer from './../reducers/expenses'\r\nimport filtersReducer from './../reducers/filters'\r\n\r\nexport default () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            expenses: expensesReducer,\r\n            filters: filtersReducer\r\n        }), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n    return store\r\n}\r\n\r\n\r\n"],"sourceRoot":""}